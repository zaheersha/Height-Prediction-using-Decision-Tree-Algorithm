# -*- coding: utf-8 -*-
"""height_prediction_using_decision_tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NaUTlIiJ2IBPM8fCQoChn8l-hFjcgXbs
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

#load dataset
from google.colab import files 
uploaded = files.upload()

dataset = pd.read_csv('height_prediction_using _decision_tree.csv')

#summarizing
print(dataset.shape)
print(dataset.head(5))

#segrating data
X = dataset.iloc[:, :-1].values
X

Y = dataset.iloc[:,-1].values
Y

#spliting the dataset
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X,Y,test_size=0.20,random_state=0)

#training the dataset
from sklearn.tree import DecisionTreeRegressor
modal = DecisionTreeRegressor()
modal.fit(x_train, y_train)

#visuallizing the graph
X_val = np.arange(min(x_train), max(x_train), 0.01)
X_val = X_val.reshape((len(X_val),1))
plt.scatter(x_train, y_train, color = 'green')
plt.plot(X_val, modal.predict(X_val), color = 'red')
plt.title('height prediction using the decision tree')
plt.xlabel('Age')
plt.ylabel('Height')
plt.figure()
plt.show()

#predict for all the test data for validation
print(x_test)

ypred = modal.predict(x_test)

from sklearn.metrics import r2_score,mean_squared_error
mse = mean_squared_error(y_test,ypred)
rmse=np.sqrt(mse)
print("root mean square error:",rmse)
r2score = r2_score(y_test,ypred)
print("R2score",r2score*100)